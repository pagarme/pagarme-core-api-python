# -*- coding: utf-8 -*-

"""
    pagarmecoreapi

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""

import pagarmecoreapi.models.create_split_request

class CreateSubscriptionSplitRequest(object):

    """Implementation of the 'CreateSubscriptionSplitRequest' model.

    Subscription's Split

    Attributes:
        enable (bool): Defines if the split is enabled
        rules (CreateSplitRequest): Split

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "enable":'enable',
        "rules":'rules'
    }

    def __init__(self,
                 enable=None,
                 rules=None):
        """Constructor for the CreateSubscriptionSplitRequest class"""

        # Initialize members of the class
        self.enable = enable
        self.rules = rules


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        enable = dictionary.get('enable')
        rules = pagarmecoreapi.models.create_split_request.CreateSplitRequest.from_dictionary(dictionary.get('rules')) if dictionary.get('rules') else None

        # Return an object of this model
        return cls(enable,
                   rules)


